{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setStatus","useSelector","Container","href","src","alt","Menu","map","index","RightMenu","className","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","props","CloseIcon","Section","title","description","leftButton","rightButton","backgroundImg","first","Wrap","bgImg","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2PAMMA,EAAWC,YAAY,CACzBC,KAAM,MACNC,aANiB,CACjBC,KAAM,CAAE,UAAW,UAAW,UAAW,YAMzCC,SAAU,KAGDC,EAAa,SAAAC,GAAK,OAAIA,EAAMC,IAAIJ,MAE9BJ,IAAf,Q,eCwCeS,EAhDA,WACX,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAqBC,EAArB,KAEMR,EAAOS,YAAYP,GAEzB,OACI,eAACQ,EAAD,WACI,mBAAGC,KAAK,IAAR,SACI,qBAAKC,IAAI,mBAAmBC,IAAI,OAEpC,cAACC,EAAD,UACMd,GAAQA,EAAKe,KAAI,SAACX,EAAKY,GAAN,OACf,4BAAe,mBAAGL,KAAK,IAAR,SAAaP,KAApBY,QAGhB,eAACC,EAAD,WACI,4BAAG,mBAAGN,KAAK,IAAIO,UAAU,UAAtB,oBACH,4BAAG,mBAAGP,KAAK,IAAIO,UAAU,UAAtB,uBACH,mBAAGC,QAAS,kBAAMX,GAAWD,IAA7B,SAA4C,mBAAGI,KAAK,IAAR,uBAEhD,eAACS,EAAD,CAAWC,KAAMd,EAAjB,UACI,cAACe,EAAD,UACI,cAACC,EAAD,CAAaJ,QAAS,kBAAMX,GAAWD,QAE3C,+BACMP,GAAQA,EAAKe,KAAI,SAACX,EAAKY,GAAN,OACf,oBAAIE,UAAU,UAAd,SAAoC,mBAAGP,KAAK,IAAR,SAAaP,KAApBY,MAEjC,6BAAI,mBAAGL,KAAK,GAAR,kCACJ,6BAAI,mBAAGA,KAAK,GAAR,8BACJ,6BAAI,mBAAGA,KAAK,GAAR,wBACJ,6BAAI,mBAAGA,KAAK,GAAR,0BACJ,6BAAI,mBAAGA,KAAK,GAAR,0BACJ,6BAAI,mBAAGA,KAAK,GAAR,wBACJ,6BAAI,mBAAGA,KAAK,GAAR,oBACJ,6BAAI,mBAAGA,KAAK,GAAR,wBACJ,6BAAI,mBAAGA,KAAK,GAAR,yBACJ,6BAAI,mBAAGA,KAAK,GAAR,iCACJ,6BAAI,mBAAGA,KAAK,GAAR,yBACJ,6BAAI,mBAAGA,KAAK,GAAR,uBACJ,6BAAI,mBAAGA,KAAK,GAAR,iCAUlBD,EAAYc,IAAOC,IAAV,6OAYTX,EAAOU,IAAOC,IAAV,kVAmBJR,EAAYO,IAAOC,IAAV,gNAYTL,EAAYI,IAAOC,IAAV,4hBAYE,SAAAC,GAAK,OAAIA,EAAML,KAAO,iBAAmB,sBAkBpDE,EAAcC,YAAOG,IAAPH,CAAH,kDAGXF,EAAeE,IAAOC,IAAV,2G,iBCtFHG,EAzCC,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,MAAOC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,MAC3E,OACI,eAACC,EAAD,CAAMC,MAAOH,EAAb,UACI,cAAC,IAAD,CAAMI,QAAM,EAAZ,SACI,eAACC,EAAD,WACI,6BAAKT,IACL,mBAAGX,UAAU,QAAb,SAAsBY,SAG9B,eAACS,EAAD,WACI,cAAC,IAAD,CAAMF,QAAM,EAAZ,SACI,eAACG,EAAD,WACI,cAACC,EAAD,UACKV,IAEHC,GACE,cAACU,EAAD,UACKV,SAMfE,GACE,cAACS,EAAD,CAAW/B,IAAI,kCAmB7BuB,EAAOX,IAAOC,IAAV,mYAWc,SAAAC,GAAK,6BAAoBA,EAAMU,MAA1B,SAIvBE,EAAWd,IAAOC,IAAV,kJAURc,EAAUf,IAAOC,IAAV,0BAEPe,EAAchB,IAAOC,IAAV,mJAOXgB,EAAajB,IAAOC,IAAV,kXAiBViB,EAAclB,YAAOiB,EAAPjB,CAAH,+FAMXmB,EAAYnB,IAAOoB,IAAV,0FC7CAC,EAxDF,WACT,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CACIhB,MAAM,UACNC,YAAY,sCACZC,WAAW,eACXC,YAAY,qBACZC,cAAc,cACdC,MAAM,UAEV,cAAC,EAAD,CACIL,MAAM,UACNC,YAAY,sCACZC,WAAW,eACXC,YAAY,qBACZC,cAAc,gBAElB,cAAC,EAAD,CACIJ,MAAM,UACNC,YAAY,sCACZC,WAAW,eACXC,YAAY,qBACZC,cAAc,gBAElB,cAAC,EAAD,CACIJ,MAAM,UACNC,YAAY,sCACZC,WAAW,eACXC,YAAY,qBACZC,cAAc,gBAElB,cAAC,EAAD,CACIJ,MAAM,sCACNC,YAAY,uBACZC,WAAW,YACXC,YAAY,aACZC,cAAc,oBAElB,cAAC,EAAD,CACIJ,MAAM,sBACNC,YAAY,0DACZC,WAAW,YACXC,YAAY,aACZC,cAAc,mBAElB,cAAC,EAAD,CACIJ,MAAM,cACNC,YAAY,GACZC,WAAW,YACXE,cAAc,wBAQxBvB,EAAYc,IAAOC,IAAV,gDCjDAqB,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLOC,EAAQC,YAAe,CAClCC,QAAS,CACP7C,IAAK8C,KCOWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJY,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.3622b5a8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    cars: [ 'Model S', 'Model Y', 'Model 3', 'Model X' ]\n}\n\nconst carSlice = createSlice({\n    name: 'car',\n    initialState,\n    reducers: {}\n})\n\nexport const selectCars = state => state.car.cars\n\nexport default carSlice.reducer","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { selectCars } from '../features/car/carSlice';\nimport { useSelector } from 'react-redux';\n\nconst Header = () => {\n    const [burgerStatus, setStatus] = useState(false);\n\n    const cars = useSelector(selectCars);\n\n    return (\n        <Container>\n            <a href=\"/\">\n                <img src=\"/images/logo.svg\" alt=\"\" />\n            </a>\n            <Menu>\n                { cars && cars.map((car, index) => (\n                    <p key={index}><a href=\"#\">{car}</a></p>\n                )) }\n            </Menu>\n            <RightMenu>\n                <p><a href=\"#\" className='hide-sm'>Shop</a></p>\n                <p><a href=\"#\" className='hide-sm'>Account</a></p>\n                <p onClick={() => setStatus(!burgerStatus)}><a href=\"#\">Menu</a></p>\n            </RightMenu>\n            <BurgerNav show={burgerStatus}>\n                <CloseWrapper>\n                    <CustomClose onClick={() => setStatus(!burgerStatus)} />\n                </CloseWrapper>\n                <ul>\n                    { cars && cars.map((car, index) => (\n                        <li className='show-sm' key={index}><a href=\"#\">{car}</a></li>\n                    )) }\n                    <li><a href=\"\">Existing Inventory</a></li>\n                    <li><a href=\"\">Used Inventory</a></li>\n                    <li><a href=\"\">Trade-in</a></li>\n                    <li><a href=\"\">Test Drive</a></li>\n                    <li><a href=\"\">Cybertruck</a></li>\n                    <li><a href=\"\">Roadster</a></li>\n                    <li><a href=\"\">Semi</a></li>\n                    <li><a href=\"\">Charging</a></li>\n                    <li><a href=\"\">Powerwall</a></li>\n                    <li><a href=\"\">Commercial Energy</a></li>\n                    <li><a href=\"\">Utilities</a></li>\n                    <li><a href=\"\">Find Us</a></li>\n                    <li><a href=\"\">Support</a></li>\n                </ul>\n            </BurgerNav>\n        </Container>\n        \n    )\n}\n\nexport default Header;\n\nconst Container = styled.div`\n    min-height: 60px;\n    position: fixed;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 20px;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n`\nconst Menu = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    padding-left: 105px;\n    \n    p{\n        font-size: 14px;\n        font-weight: 600;\n        padding: 0 20px;\n        flex-wrap: nowrap;\n    }\n\n    @media(max-width: 1200px) {\n        display: none;\n    }\n`\n\nconst RightMenu = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    p{\n        font-size: 14px;\n        font-weight: 600;\n        padding: 0 10px;\n    } \n`\n\nconst BurgerNav = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background: #fff;\n    width: 310px;\n    z-index: 16;\n    padding: 40px;\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    transform: ${props => props.show ? 'translateX(0%)' : 'translateX(100%)'};\n    transition: transform 0.5s;\n\n    ul {\n        list-style: none;\n\n        li {\n            padding: 10px 0;\n\n            a {\n                color: #393c41;\n                font-size: 14px;\n                font-weight: 600;\n            }\n        }\n    }\n`\n\nconst CustomClose = styled(CloseIcon)`\n    cursor: pointer;\n`\nconst CloseWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    padding-bottom: 20px;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\n\nconst Section = ({ title, description, leftButton, rightButton, backgroundImg, first }) => {\n    return (\n        <Wrap bgImg={backgroundImg}>\n            <Fade bottom>\n                <ItemText>\n                    <h1>{title}</h1>\n                    <p className='sec-p'>{description}</p>\n                </ItemText>\n            </Fade>\n            <Buttons>\n                <Fade bottom>\n                    <ButtonGroup>\n                        <LeftButton>\n                            {leftButton}\n                        </LeftButton>\n                        { rightButton && \n                            <RightButton>\n                                {rightButton}\n                            </RightButton> \n                        }\n                    </ButtonGroup>\n                </Fade>\n                \n                { first &&\n                    <DownArrow src='/images/down-arrow.svg' />\n\n                }\n            </Buttons>\n        </Wrap>\n    )\n}\n\nSection.propTypes ={\n    title: PropTypes.string,\n    first: PropTypes.string,\n    description: PropTypes.string,\n    leftButton: PropTypes.string,\n    rightButton: PropTypes.string,\n    backgroundImg: PropTypes.string\n}\n\nexport default Section;\n\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: url('/images/model-s.jpg');\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${props => `url('/images/${props.bgImg}')`};\n    scroll-snap-align: start;\n`;\n\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n\n    p {\n        color: #5c5e62;\n        font-size: 14px;\n    }\n`;\n\nconst Buttons = styled.div``\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px) {\n        flex-direction: column;\n    }\n`\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: #fff;\n    font-weight: 600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 8px;\n`\n\nconst RightButton = styled(LeftButton)`\n    background-color: #fff;\n    opacity: 0.65;\n    color: #000;\n`\n\nconst DownArrow = styled.img`\n    height: 40px;\n    animation: animateDown infinite 1.5s;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Section from './Section';\n \nconst Home = () => {\n    return (\n        <Container>\n            <Section \n                title='Model S'\n                description='Order Online for Touchless Delivery'\n                leftButton='Custom Order'\n                rightButton='Existing Inventory'\n                backgroundImg='model-s.jpg'\n                first='first'\n            />\n            <Section\n                title='Model Y'\n                description='Order Online for Touchless Delivery'\n                leftButton='Custom Order'\n                rightButton='Existing Inventory'\n                backgroundImg='model-y.jpg'\n            />\n            <Section\n                title='Model 3'\n                description='Order Online for Touchless Delivery'\n                leftButton='Custom Order'\n                rightButton='Existing Inventory'\n                backgroundImg='model-3.jpg' \n            />\n            <Section\n                title='Model X'\n                description='Order Online for Touchless Delivery'\n                leftButton='Custom Order'\n                rightButton='Existing Inventory'\n                backgroundImg='model-x.jpg'\n            />\n            <Section\n                title='Lowest Cost Solar Panels in America'\n                description='Money-back guarantee'\n                leftButton='Order Now'\n                rightButton='Learn More'\n                backgroundImg='solar-panel.jpg'\n            />\n            <Section\n                title='Solar for New Roofs'\n                description='Solar Roof Costs Less Than a New Roof Plus Solar Panels'\n                leftButton='Order Now'\n                rightButton='Learn More'\n                backgroundImg='solar-roof.jpg'\n            />\n            <Section\n                title='Accessories'\n                description=''\n                leftButton='Order Now'\n                backgroundImg='accessories.jpg'\n            />\n        </Container>\n    )\n}\n\nexport default Home;\n\nconst Container = styled.div`\n    height: 100vh;\n`\n","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/car/carSlice';\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}